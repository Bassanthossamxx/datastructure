#include<iostream>
#define maxsize 100
using namespace std;

class queue {
private:
    int front, rear;
    int item[maxsize];

public:
 queue() {
        front = -1;
        rear = -1;
    }

    bool isempty() {
        if (front == -1 && rear == -1)
            return true;
        return false;
    }

    bool isfull() {
        if ((rear+1)%maxsize==front)return true;
        return false;
    }

    void enqueue(int v) {
        if (isfull()) {
            cout << "Queue is full\n";
            return;
        }
        if (front == -1)front = 0;
        else  rear=(rear+1)%maxsize;
        item[rear] = v;
    }

    int dequeue() {
        if (isempty()) {
            cout << "Queue is empty\n";
            return 0;
        }

        int x = item[front];

        if (front == rear) {
            front = rear = -1;
        } else {
            front=(front +1)%maxsize;
        }
        return x;
    }
    void display() {
        if (isempty())
         {
            cout << "Queue is empty\n";
            return;
        }

        for (int i = front; i <= rear; i++)
         {
            cout << item[i] << " ";
        }
        cout << endl;
    }
};

int main() {
    queue myQueue;
    myQueue.enqueue(10);
    myQueue.enqueue(20);
    myQueue.enqueue(30);
    cout << "Queue elements: ";
    myQueue.display();
    int dequeuedValue = myQueue.dequeue();
    cout << "Dequeued element: " << dequeuedValue << endl;
    cout << "Updated queue elements: ";
    myQueue.display();
return 0;
}
